#!/usr/bin/env zsh
# lx is a script that combines ls and less

dir_is_not_empty() {
  # check visible files
  {
    : "$1"/*
    return 0  # found visible files
  } always {
    TRY_BLOCK_ERROR=0
  }

  # check hidden files
  {
    : "$1"/.*
    return 0
  } always {
    TRY_BLOCK_ERROR=0
  }

  return 1
} 2>/dev/null

dir_is_empty() {
  ! dir_is_not_empty "$@"
}

havecmd() {
  command -v "$1" &>/dev/null
}

_display_file() {
  if havecmd bat; then
    bat "$1"
  elif havecmd batcat; then
    batcat "$1"
  elif havecmd pygmentize; then
    pygmentize -f terminal "$1"
  else
    less -F "$1"
  fi
}

lx() {
  if [[ $# == 1 ]]; then
    # if there's one argument and it's a file, show its contents
    if [[ -f "$1" ]]; then
      _display_file "$1"
      return
    fi

    # ls prints nothing if a directory is empty, which can be confusing. This
    # makes it clear that the directory has no files.
    if dir_is_empty "$1"; then
      echo "empty directory: $1" >&2
      return
    fi
  fi

  # if there are no arguments, multiple arguments, or the single argument is a
  # non-empty directory, use ls
  ls -F "$@"
}

lx "$@"
